// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/LoadFinishMsg.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/LoadFinishMsg.proto</summary>
public static partial class LoadFinishMsgReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/LoadFinishMsg.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static LoadFinishMsgReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Chlwcm90by9Mb2FkRmluaXNoTXNnLnByb3RvIkgKDUxvYWRGaW5pc2hNc2cS",
          "DAoEY29kZRgBIAEoCRILCgNtc2cYAiABKAkSHAoHcGxheWVycxgDIAMoCzIL",
          "LlBsYXllckluZm8iJgoGRW5kTXNnEhwKB3BsYXllcnMYASADKAsyCy5QbGF5",
          "ZXJJbmZvIrgBCgpQbGF5ZXJJbmZvEgsKA3VpZBgBIAEoCRIJCgF4GAIgASgC",
          "EgkKAXoYAyABKAISCgoCZXkYBCABKAISCgoCaHAYBSABKAESDgoGZGVncmVl",
          "GAYgASgFEhAKCG5pY2tuYW1lGAcgASgJEg4KBmF0dGFjaBgIIAEoARIPCgdk",
          "ZWZlbnNlGAkgASgBEg0KBXNwZWVkGAogASgBEg8KB2tpbGxOdW0YCyABKAUS",
          "DAoEcmFuaxgMIAEoBWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::LoadFinishMsg), global::LoadFinishMsg.Parser, new[]{ "Code", "Msg", "Players" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::EndMsg), global::EndMsg.Parser, new[]{ "Players" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerInfo), global::PlayerInfo.Parser, new[]{ "Uid", "X", "Z", "Ey", "Hp", "Degree", "Nickname", "Attach", "Defense", "Speed", "KillNum", "Rank" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class LoadFinishMsg : pb::IMessage<LoadFinishMsg> {
  private static readonly pb::MessageParser<LoadFinishMsg> _parser = new pb::MessageParser<LoadFinishMsg>(() => new LoadFinishMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoadFinishMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoadFinishMsgReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadFinishMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadFinishMsg(LoadFinishMsg other) : this() {
    code_ = other.code_;
    msg_ = other.msg_;
    players_ = other.players_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoadFinishMsg Clone() {
    return new LoadFinishMsg(this);
  }

  /// <summary>Field number for the "code" field.</summary>
  public const int CodeFieldNumber = 1;
  private string code_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Code {
    get { return code_; }
    set {
      code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 2;
  private string msg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 3;
  private static readonly pb::FieldCodec<global::PlayerInfo> _repeated_players_codec
      = pb::FieldCodec.ForMessage(26, global::PlayerInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerInfo> players_ = new pbc::RepeatedField<global::PlayerInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerInfo> Players {
    get { return players_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoadFinishMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoadFinishMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Code != other.Code) return false;
    if (Msg != other.Msg) return false;
    if(!players_.Equals(other.players_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Code.Length != 0) hash ^= Code.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    hash ^= players_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Code.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Code);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
    players_.WriteTo(output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Code.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
    }
    size += players_.CalculateSize(_repeated_players_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoadFinishMsg other) {
    if (other == null) {
      return;
    }
    if (other.Code.Length != 0) {
      Code = other.Code;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
    players_.Add(other.players_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Code = input.ReadString();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
        case 26: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class EndMsg : pb::IMessage<EndMsg> {
  private static readonly pb::MessageParser<EndMsg> _parser = new pb::MessageParser<EndMsg>(() => new EndMsg());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<EndMsg> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoadFinishMsgReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EndMsg() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EndMsg(EndMsg other) : this() {
    players_ = other.players_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public EndMsg Clone() {
    return new EndMsg(this);
  }

  /// <summary>Field number for the "players" field.</summary>
  public const int PlayersFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PlayerInfo> _repeated_players_codec
      = pb::FieldCodec.ForMessage(10, global::PlayerInfo.Parser);
  private readonly pbc::RepeatedField<global::PlayerInfo> players_ = new pbc::RepeatedField<global::PlayerInfo>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PlayerInfo> Players {
    get { return players_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as EndMsg);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(EndMsg other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!players_.Equals(other.players_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= players_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    players_.WriteTo(output, _repeated_players_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += players_.CalculateSize(_repeated_players_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(EndMsg other) {
    if (other == null) {
      return;
    }
    players_.Add(other.players_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          players_.AddEntriesFrom(input, _repeated_players_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
  private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::LoadFinishMsgReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo(PlayerInfo other) : this() {
    uid_ = other.uid_;
    x_ = other.x_;
    z_ = other.z_;
    ey_ = other.ey_;
    hp_ = other.hp_;
    degree_ = other.degree_;
    nickname_ = other.nickname_;
    attach_ = other.attach_;
    defense_ = other.defense_;
    speed_ = other.speed_;
    killNum_ = other.killNum_;
    rank_ = other.rank_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerInfo Clone() {
    return new PlayerInfo(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int UidFieldNumber = 1;
  private string uid_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Uid {
    get { return uid_; }
    set {
      uid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "x" field.</summary>
  public const int XFieldNumber = 2;
  private float x_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float X {
    get { return x_; }
    set {
      x_ = value;
    }
  }

  /// <summary>Field number for the "z" field.</summary>
  public const int ZFieldNumber = 3;
  private float z_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Z {
    get { return z_; }
    set {
      z_ = value;
    }
  }

  /// <summary>Field number for the "ey" field.</summary>
  public const int EyFieldNumber = 4;
  private float ey_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Ey {
    get { return ey_; }
    set {
      ey_ = value;
    }
  }

  /// <summary>Field number for the "hp" field.</summary>
  public const int HpFieldNumber = 5;
  private double hp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Hp {
    get { return hp_; }
    set {
      hp_ = value;
    }
  }

  /// <summary>Field number for the "degree" field.</summary>
  public const int DegreeFieldNumber = 6;
  private int degree_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Degree {
    get { return degree_; }
    set {
      degree_ = value;
    }
  }

  /// <summary>Field number for the "nickname" field.</summary>
  public const int NicknameFieldNumber = 7;
  private string nickname_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Nickname {
    get { return nickname_; }
    set {
      nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "attach" field.</summary>
  public const int AttachFieldNumber = 8;
  private double attach_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Attach {
    get { return attach_; }
    set {
      attach_ = value;
    }
  }

  /// <summary>Field number for the "defense" field.</summary>
  public const int DefenseFieldNumber = 9;
  private double defense_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Defense {
    get { return defense_; }
    set {
      defense_ = value;
    }
  }

  /// <summary>Field number for the "speed" field.</summary>
  public const int SpeedFieldNumber = 10;
  private double speed_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public double Speed {
    get { return speed_; }
    set {
      speed_ = value;
    }
  }

  /// <summary>Field number for the "killNum" field.</summary>
  public const int KillNumFieldNumber = 11;
  private int killNum_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int KillNum {
    get { return killNum_; }
    set {
      killNum_ = value;
    }
  }

  /// <summary>Field number for the "rank" field.</summary>
  public const int RankFieldNumber = 12;
  private int rank_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Rank {
    get { return rank_; }
    set {
      rank_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Uid != other.Uid) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Ey, other.Ey)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Hp, other.Hp)) return false;
    if (Degree != other.Degree) return false;
    if (Nickname != other.Nickname) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Attach, other.Attach)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Defense, other.Defense)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Speed, other.Speed)) return false;
    if (KillNum != other.KillNum) return false;
    if (Rank != other.Rank) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Uid.Length != 0) hash ^= Uid.GetHashCode();
    if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
    if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
    if (Ey != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Ey);
    if (Hp != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Hp);
    if (Degree != 0) hash ^= Degree.GetHashCode();
    if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
    if (Attach != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Attach);
    if (Defense != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Defense);
    if (Speed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Speed);
    if (KillNum != 0) hash ^= KillNum.GetHashCode();
    if (Rank != 0) hash ^= Rank.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Uid.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Uid);
    }
    if (X != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(X);
    }
    if (Z != 0F) {
      output.WriteRawTag(29);
      output.WriteFloat(Z);
    }
    if (Ey != 0F) {
      output.WriteRawTag(37);
      output.WriteFloat(Ey);
    }
    if (Hp != 0D) {
      output.WriteRawTag(41);
      output.WriteDouble(Hp);
    }
    if (Degree != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(Degree);
    }
    if (Nickname.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Nickname);
    }
    if (Attach != 0D) {
      output.WriteRawTag(65);
      output.WriteDouble(Attach);
    }
    if (Defense != 0D) {
      output.WriteRawTag(73);
      output.WriteDouble(Defense);
    }
    if (Speed != 0D) {
      output.WriteRawTag(81);
      output.WriteDouble(Speed);
    }
    if (KillNum != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(KillNum);
    }
    if (Rank != 0) {
      output.WriteRawTag(96);
      output.WriteInt32(Rank);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Uid.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Uid);
    }
    if (X != 0F) {
      size += 1 + 4;
    }
    if (Z != 0F) {
      size += 1 + 4;
    }
    if (Ey != 0F) {
      size += 1 + 4;
    }
    if (Hp != 0D) {
      size += 1 + 8;
    }
    if (Degree != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Degree);
    }
    if (Nickname.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
    }
    if (Attach != 0D) {
      size += 1 + 8;
    }
    if (Defense != 0D) {
      size += 1 + 8;
    }
    if (Speed != 0D) {
      size += 1 + 8;
    }
    if (KillNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(KillNum);
    }
    if (Rank != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rank);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerInfo other) {
    if (other == null) {
      return;
    }
    if (other.Uid.Length != 0) {
      Uid = other.Uid;
    }
    if (other.X != 0F) {
      X = other.X;
    }
    if (other.Z != 0F) {
      Z = other.Z;
    }
    if (other.Ey != 0F) {
      Ey = other.Ey;
    }
    if (other.Hp != 0D) {
      Hp = other.Hp;
    }
    if (other.Degree != 0) {
      Degree = other.Degree;
    }
    if (other.Nickname.Length != 0) {
      Nickname = other.Nickname;
    }
    if (other.Attach != 0D) {
      Attach = other.Attach;
    }
    if (other.Defense != 0D) {
      Defense = other.Defense;
    }
    if (other.Speed != 0D) {
      Speed = other.Speed;
    }
    if (other.KillNum != 0) {
      KillNum = other.KillNum;
    }
    if (other.Rank != 0) {
      Rank = other.Rank;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Uid = input.ReadString();
          break;
        }
        case 21: {
          X = input.ReadFloat();
          break;
        }
        case 29: {
          Z = input.ReadFloat();
          break;
        }
        case 37: {
          Ey = input.ReadFloat();
          break;
        }
        case 41: {
          Hp = input.ReadDouble();
          break;
        }
        case 48: {
          Degree = input.ReadInt32();
          break;
        }
        case 58: {
          Nickname = input.ReadString();
          break;
        }
        case 65: {
          Attach = input.ReadDouble();
          break;
        }
        case 73: {
          Defense = input.ReadDouble();
          break;
        }
        case 81: {
          Speed = input.ReadDouble();
          break;
        }
        case 88: {
          KillNum = input.ReadInt32();
          break;
        }
        case 96: {
          Rank = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
